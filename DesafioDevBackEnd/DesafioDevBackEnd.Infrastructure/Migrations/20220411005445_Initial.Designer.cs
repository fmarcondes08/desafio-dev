// <auto-generated />
using System;
using DesafioDevBackEnd.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DesafioDevBackEnd.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220411005445_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DesafioDevBackEnd.Domain.Entities.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newsequentialid()");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Card")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Deleted_At")
                        .HasColumnType("datetime");

                    b.Property<string>("StoreName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StoreOwner")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TransactionTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Updated_At")
                        .HasColumnType("datetime");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal");

                    b.HasKey("Id");

                    b.HasIndex("TransactionTypeId")
                        .IsUnique();

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("DesafioDevBackEnd.Domain.Entities.TransactionType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newsequentialid()");

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Deleted_At")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nature")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Signal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Type")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Updated_At")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("Type")
                        .IsUnique();

                    b.ToTable("TransactionTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("dd70f5a9-a6f3-4684-939e-d33558db1550"),
                            Created_At = new DateTime(2022, 4, 10, 21, 54, 44, 670, DateTimeKind.Local).AddTicks(6270),
                            Description = "Débito",
                            Nature = "Entrada",
                            Signal = "+",
                            Type = 1L,
                            Updated_At = new DateTime(2022, 4, 10, 21, 54, 44, 671, DateTimeKind.Local).AddTicks(4123)
                        },
                        new
                        {
                            Id = new Guid("bb95ccac-5cd5-4872-ae1e-afa58ce7542b"),
                            Created_At = new DateTime(2022, 4, 10, 21, 54, 44, 671, DateTimeKind.Local).AddTicks(4816),
                            Description = "Boleto",
                            Nature = "Saída",
                            Signal = "-",
                            Type = 2L,
                            Updated_At = new DateTime(2022, 4, 10, 21, 54, 44, 671, DateTimeKind.Local).AddTicks(4821)
                        },
                        new
                        {
                            Id = new Guid("6cdb7ac0-52f1-4f11-8346-562cd6b0ea48"),
                            Created_At = new DateTime(2022, 4, 10, 21, 54, 44, 671, DateTimeKind.Local).AddTicks(4824),
                            Description = "Financiamento",
                            Nature = "Saída",
                            Signal = "-",
                            Type = 3L,
                            Updated_At = new DateTime(2022, 4, 10, 21, 54, 44, 671, DateTimeKind.Local).AddTicks(4825)
                        },
                        new
                        {
                            Id = new Guid("1fa0a2d6-bb96-4cac-a843-4bbe83e5ece6"),
                            Created_At = new DateTime(2022, 4, 10, 21, 54, 44, 671, DateTimeKind.Local).AddTicks(4827),
                            Description = "Crédito",
                            Nature = "Entrada",
                            Signal = "+",
                            Type = 4L,
                            Updated_At = new DateTime(2022, 4, 10, 21, 54, 44, 671, DateTimeKind.Local).AddTicks(4828)
                        },
                        new
                        {
                            Id = new Guid("d12fea30-27f1-4e2d-8563-f6019f96a1aa"),
                            Created_At = new DateTime(2022, 4, 10, 21, 54, 44, 671, DateTimeKind.Local).AddTicks(4831),
                            Description = "Recebimento Empréstimo",
                            Nature = "Entrada",
                            Signal = "+",
                            Type = 5L,
                            Updated_At = new DateTime(2022, 4, 10, 21, 54, 44, 671, DateTimeKind.Local).AddTicks(4832)
                        },
                        new
                        {
                            Id = new Guid("1d2a3d16-9e94-449f-ac41-890973457f95"),
                            Created_At = new DateTime(2022, 4, 10, 21, 54, 44, 671, DateTimeKind.Local).AddTicks(4834),
                            Description = "Vendas",
                            Nature = "Entrada",
                            Signal = "+",
                            Type = 6L,
                            Updated_At = new DateTime(2022, 4, 10, 21, 54, 44, 671, DateTimeKind.Local).AddTicks(4835)
                        },
                        new
                        {
                            Id = new Guid("9ffb2183-e3a3-4bf4-9af1-2e812145eb53"),
                            Created_At = new DateTime(2022, 4, 10, 21, 54, 44, 671, DateTimeKind.Local).AddTicks(4837),
                            Description = "Recebimento TED",
                            Nature = "Entrada",
                            Signal = "+",
                            Type = 7L,
                            Updated_At = new DateTime(2022, 4, 10, 21, 54, 44, 671, DateTimeKind.Local).AddTicks(4837)
                        },
                        new
                        {
                            Id = new Guid("2fc30eca-684d-4efa-8104-bfad420f4449"),
                            Created_At = new DateTime(2022, 4, 10, 21, 54, 44, 671, DateTimeKind.Local).AddTicks(4839),
                            Description = "Recebimento DOC",
                            Nature = "Entrada",
                            Signal = "+",
                            Type = 8L,
                            Updated_At = new DateTime(2022, 4, 10, 21, 54, 44, 671, DateTimeKind.Local).AddTicks(4840)
                        },
                        new
                        {
                            Id = new Guid("560a6c3e-a654-4cf1-a5c5-77383ba232f0"),
                            Created_At = new DateTime(2022, 4, 10, 21, 54, 44, 671, DateTimeKind.Local).AddTicks(4848),
                            Description = "Aluguel",
                            Nature = "Saída",
                            Signal = "+",
                            Type = 9L,
                            Updated_At = new DateTime(2022, 4, 10, 21, 54, 44, 671, DateTimeKind.Local).AddTicks(4849)
                        });
                });

            modelBuilder.Entity("DesafioDevBackEnd.Domain.Entities.Transaction", b =>
                {
                    b.HasOne("DesafioDevBackEnd.Domain.Entities.TransactionType", "TransactionType")
                        .WithMany("Transactions")
                        .HasForeignKey("TransactionTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TransactionType");
                });

            modelBuilder.Entity("DesafioDevBackEnd.Domain.Entities.TransactionType", b =>
                {
                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
