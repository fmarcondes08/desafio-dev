// <auto-generated />
using System;
using DesafioDevBackEnd.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DesafioDevBackEnd.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220413032445_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DesafioDevBackEnd.Domain.Entities.Transaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newsequentialid()");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Card")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Deleted_At")
                        .HasColumnType("datetime");

                    b.Property<string>("StoreName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StoreOwner")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TransactionTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Updated_At")
                        .HasColumnType("datetime");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal");

                    b.HasKey("Id");

                    b.HasIndex("TransactionTypeId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("DesafioDevBackEnd.Domain.Entities.TransactionType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newsequentialid()");

                    b.Property<DateTime>("Created_At")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Deleted_At")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nature")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Signal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Type")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Updated_At")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("Type")
                        .IsUnique();

                    b.ToTable("TransactionTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("086f2ed5-ec23-46a2-9f27-185e29a33c0c"),
                            Created_At = new DateTime(2022, 4, 13, 0, 24, 44, 654, DateTimeKind.Local).AddTicks(2177),
                            Description = "Débito",
                            Nature = "Entrada",
                            Signal = "+",
                            Type = 1L,
                            Updated_At = new DateTime(2022, 4, 13, 0, 24, 44, 654, DateTimeKind.Local).AddTicks(8109)
                        },
                        new
                        {
                            Id = new Guid("6d2a5ca3-fd68-42ec-8c4b-4e615fd65525"),
                            Created_At = new DateTime(2022, 4, 13, 0, 24, 44, 654, DateTimeKind.Local).AddTicks(8806),
                            Description = "Boleto",
                            Nature = "Saída",
                            Signal = "-",
                            Type = 2L,
                            Updated_At = new DateTime(2022, 4, 13, 0, 24, 44, 654, DateTimeKind.Local).AddTicks(8810)
                        },
                        new
                        {
                            Id = new Guid("b7654cdb-f97b-434f-88f1-3b0620965f4b"),
                            Created_At = new DateTime(2022, 4, 13, 0, 24, 44, 654, DateTimeKind.Local).AddTicks(8814),
                            Description = "Financiamento",
                            Nature = "Saída",
                            Signal = "-",
                            Type = 3L,
                            Updated_At = new DateTime(2022, 4, 13, 0, 24, 44, 654, DateTimeKind.Local).AddTicks(8815)
                        },
                        new
                        {
                            Id = new Guid("6a81195c-cd3d-4f4c-ae87-1075a3eaec19"),
                            Created_At = new DateTime(2022, 4, 13, 0, 24, 44, 654, DateTimeKind.Local).AddTicks(8817),
                            Description = "Crédito",
                            Nature = "Entrada",
                            Signal = "+",
                            Type = 4L,
                            Updated_At = new DateTime(2022, 4, 13, 0, 24, 44, 654, DateTimeKind.Local).AddTicks(8817)
                        },
                        new
                        {
                            Id = new Guid("df6a1dc1-19d1-40a0-8df5-d89ef69c58d3"),
                            Created_At = new DateTime(2022, 4, 13, 0, 24, 44, 654, DateTimeKind.Local).AddTicks(8820),
                            Description = "Recebimento Empréstimo",
                            Nature = "Entrada",
                            Signal = "+",
                            Type = 5L,
                            Updated_At = new DateTime(2022, 4, 13, 0, 24, 44, 654, DateTimeKind.Local).AddTicks(8821)
                        },
                        new
                        {
                            Id = new Guid("d2ea9a29-c590-4ed0-b403-a73b6bacfce0"),
                            Created_At = new DateTime(2022, 4, 13, 0, 24, 44, 654, DateTimeKind.Local).AddTicks(8823),
                            Description = "Vendas",
                            Nature = "Entrada",
                            Signal = "+",
                            Type = 6L,
                            Updated_At = new DateTime(2022, 4, 13, 0, 24, 44, 654, DateTimeKind.Local).AddTicks(8823)
                        },
                        new
                        {
                            Id = new Guid("5af6be11-88df-41c8-97bb-9a9c43a95feb"),
                            Created_At = new DateTime(2022, 4, 13, 0, 24, 44, 654, DateTimeKind.Local).AddTicks(8825),
                            Description = "Recebimento TED",
                            Nature = "Entrada",
                            Signal = "+",
                            Type = 7L,
                            Updated_At = new DateTime(2022, 4, 13, 0, 24, 44, 654, DateTimeKind.Local).AddTicks(8826)
                        },
                        new
                        {
                            Id = new Guid("6f0f7b2d-c515-4420-be46-b0b5a9e73c67"),
                            Created_At = new DateTime(2022, 4, 13, 0, 24, 44, 654, DateTimeKind.Local).AddTicks(8834),
                            Description = "Recebimento DOC",
                            Nature = "Entrada",
                            Signal = "+",
                            Type = 8L,
                            Updated_At = new DateTime(2022, 4, 13, 0, 24, 44, 654, DateTimeKind.Local).AddTicks(8835)
                        },
                        new
                        {
                            Id = new Guid("3f778df6-45e7-458f-bb2f-51cb46089182"),
                            Created_At = new DateTime(2022, 4, 13, 0, 24, 44, 654, DateTimeKind.Local).AddTicks(8837),
                            Description = "Aluguel",
                            Nature = "Saída",
                            Signal = "+",
                            Type = 9L,
                            Updated_At = new DateTime(2022, 4, 13, 0, 24, 44, 654, DateTimeKind.Local).AddTicks(8838)
                        });
                });

            modelBuilder.Entity("DesafioDevBackEnd.Domain.Entities.Transaction", b =>
                {
                    b.HasOne("DesafioDevBackEnd.Domain.Entities.TransactionType", "TransactionType")
                        .WithMany("Transactions")
                        .HasForeignKey("TransactionTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TransactionType");
                });

            modelBuilder.Entity("DesafioDevBackEnd.Domain.Entities.TransactionType", b =>
                {
                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
